// 1 группа методов, которые ничего не возвращают и ничего не принемают.

void Method1()
{
    Console.WriteLine("Автор Вершинин Дмитрий");
}
// Как вызвать такой метод?
// Method1(); // Писать со скобками, иначе ошибка. // - отключил вызов, чтоб продолжить.
// -------------------------------------------------------------------
// 2 группа методов, которые ничего не возвращают, но в тоже время могут принемать какие-то аргументы.
void Method2(string msg) // string msg - какое-то количество аргументов.
{
    Console.WriteLine(msg); // т.к. в метод был передан аргумент, 
    // то тут я могу указывать операторы и использовать те аргументы, которые были приняты.
}
// Method2("Текст сообщения"); // Чтобы вызвать метод.
// Method2(msg: "Текст сообщения"); // Пишу именнованный аргумент - когда метод принемают больше одного аргумента.
// Пишу явно какому аргументу и какое значение я указываю.
// Пример:
void Method21(string msg, int count)
{
    int i = 0; // Значение переменной count.
    while(i < count) 
    {
        Console.WriteLine(msg);
        i++; // Увеличение на 1 назыв. ИНКРЕМЕНТ, уменьшение на 1 назыв. ДЕКРЕМЕНТ.
    }
}
// Method21("Текст", 4); // Вызов метода может осуществляться путем указания аргументов "Текст" 
// и какое количество раз вывести это сообщение.
// Method21(msg:"Текст", count: 4) // Могу явно указать какое значение, какому аргумету я хочу присвоить.
// Method21(count: 4, msg: "новый текст"); // Можно и так написать, поменяв порядок.
// ------------------------------------------------------------------------------------------
// 3 группа методок, которые что-то возвращают, но ничего не принемают.
// Если метод, что возвращает, то я должен укаазать тип данных у метода.
int Method3() // Агрументы он не принемает.
{
    return DateTime.Now.Year; // использование оператора return обязательно! DstaTime.Now.Year - покажет текущий год.
}
// int year = Method3(); // Для того чтобы вызвать Method3() пишу "int year", чтобы через идентификатор 
// переменной "year" и через оператор присваивания "=" положить нужное значение.
// Console.WriteLine(year); // Теперь я могу использовать переменную "year" и то значение, 
// которое мне вернул метод.
// -----------------------------------------------------------------------------------------------
// 4 группа методов, которая что-то принемают и что-то возвращают.
// string Method4(int count, string text) 
// {
//     int i = 0;
//     string result = String.Empty; // В string result нужно положить, что нибудь, поэтому пишу String.Empty (пустая сторока)

//     while (i < count) // Запущу цикл.
//     {
//         result = result + text;
//         i++;
//     }
//     return result;
// }

// string res = Method4(10, "z"); // Чтобы вызвать этот метод, нужно создать нужную (новую) переменную,
//  дальше указать в () нужный тект и количество раз которое нужно сделать склеивание. 
// Console.WriteLine(res);
// ------------------------------------------------------------------------------------------
// Опишу Method4 при помощи цикла for.
string Method4(int count, string text) 
{
    string result = String.Empty; 
    for (int i = 0; i < count; i++ ) // Так гораздо короче и красивее.
    
    {
        result = result + text;
    }
    return result;
}

string res = Method4(10, "z");
// Console.WriteLine(res);
// ---------------------------------------------------------------------------------------
// Цикл в цикле:
// Напишу код, который будет выводить таблицу умножения на экран, используя цикл в цикле.
// for (int i = 2; i < 10; i++) // Внешний цикл. 2 - т.к. таблица умножения начинается с 2.
// {
//     for (int j = 2; j < 10; j++) // Внутренний цикл.
//     {
//         Console.WriteLine($"{i} x {j} = {i*j}");
//     }
//     Console.WriteLine(); // Добавил пустую троку между циклами, так лучше видно. 
// }
// --------------------------------------------------------------------------------------
// ====== Работа с текстом
// Дан текст. В тексте нужно все пробелы заменить черточками, 
// маленькие буквы "к" заменить на большие "К",
// а большие "С" заменить на маленькие "с".

// Ясна ли задача?

// string text = "- Я думаю, - сказать князь, улыбайся, - что, "
//             + "ежели бы вас послали вместо нашего молого Винценгероде,"
//             + "вы бы взяди приступом согласие прусского короля. "
//             + "Вы так красноречивы. Вы дадите мне чаю?";
  
// string s = "qwerty" // Если будет какая-то строка, то для неё есть вспомогательный функционал.
//             0123456 // Позиция символов.
// s[3] // r           // Что бы получить конкрекретный символ, пишу идентификатор строки (s) и ([3]). 

// string Replace(string text, char oldValue, char newValue) // Опишу метод, который будет принимать строку 
// // и те символы, которые нужно будет менять. Возвращаться будет строка.
// {
//     string result = String.Empty; // Что бы себя не путать сразу заведу новыю ПУСТУЮ строку.
//     // После напишу return result - чтобы вырнуть этот результат.
//     int length = text.Length; // Чтобы получить длинну моей строки. Покажет количество символов в строке.
//     for (int i = 0; i < length; i++) // Напишу цикл for, он пробежит по всем значениям.
//     {
//         if (text[i] == oldValue) result = result + $"{newValue}"; // Если текущий символ совпал с тем символом, 
//         // который я хочу заменить, то в результат положу новое значение.
//         else result = result + $"{text[i]}"; // Если же совпадения нет, то в мой result мне нужно добавить текущий символ,
//         // который и был. 
//     }

//     return result;
// }

// string newText = Replace(text, ' ', '|'); // Заменю все пробелы заменить черточками.
// Console.WriteLine(newText); // Вывожу новый текст с исменениями.
// Console.WriteLine(); // Пустая строка, для разраничения.
// newText = Replace(newText, 'к', 'К'); // Заменю все "к" на "К".
// Console.WriteLine(newText);
// Console.WriteLine();
// newText = Replace(newText, 'с', 'С');
// Console.WriteLine(newText);

