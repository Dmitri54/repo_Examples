// 1.Перепишу предыдущий код с использованием генератора псевдослучайных чисел и с использованием методов.
// Потренирую то как можно взять метод и передать в него массив
// и соответственно заполyню массив нужным количеством элементов.
// 2.На следующем этапе опишу метод, который будет выводить все элементы по порядку.
// 3.Опишу код поиска нужного мне индекса в метод.

// void - не возвращает значение.Он называется void метод.Поэтому в коде я не использую оператор return.

void FillArray(int[] collection)//1.Что бы заполнить new int[10] случайными числами воспользуюсь методом, который написал ниже. 
{
   int length = collection.Length;
   int index = 0;

   while (index < length)
   {
       collection[index] = new Random().Next(1, 10);
       index++;

   }

}

// col - имя аргумента.Принято различные аргументы называть различными именами!

void PrintArray(int[] col) // 2.void PrintArray - Будет печатать(выводить) массив int[] col.
{
    int count = col.Length;
    int position = 0;
    while (position < count)
    {
        Console.WriteLine(col[position]);
        position++;
    }

}

int IndexOf(int[] collection, int find) //3..Будет возвращать index. IndexOf - название. В качестве элемента будет приходить (.).
{
    int count = collection.Length; // определю количество элементов.
    int index = 0; // создам, т.к.нужно сщелкать index массива.
    int position = -1; // написал -1, чтобы было понятно, что выбранный элемента нет в массиве.Можно написать хоть -2, без раздницы.
    while (index < count) //напишу цикл, который будет проверять, если index < count, то сразу буду сщелкать - index++
    {
        if (collection[index] == find) //если collection[index] совпал с find, то в этом случае нужно сохрать позицию.
        {
            position = index;
            break; // чтобы при первом совпадении остановить процес и вывести ответ на экран.
        }
        index++;
    }
    return position;
}

int[] array = new int[10]; 
// new int[10] - означает создай (определить) новый массив в котором будет 10 элементов. По умолчанию он будет нулями.
// Для тестирования напишу FillArray(array)

//3.Одаптирую решение предыдущей задачи, в которой я находил позицию(index) нужного мне элемента в массиве с использованием метода.

FillArray(array); // Заполним мне массив.
array[4] = 4;
array[6] = 4;
PrintArray(array); // Распечатал массив.
Console.WriteLine(); // Выведу пустую строчку, чтобы быть уверенным, что выход не явзяется частью массива.

int pos = IndexOf(array, 444); // Определю переменную pos и в неё положу результат работы метода IndexOf. 
// В качестве аргумента будет передоваться мой массив и для примера число.
// За место (array, 4) напишу (array, 444) - ответом будет позиция 0, это не верно.Задам int position = -1.
Console.WriteLine(pos);
